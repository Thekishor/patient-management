spring.application.name=patient-service
server.port=4000

# Uncomment to use in memory database outside of docker( ctlr + / )
#spring.h2.console.path=/h2-console
#spring.datasource.url=jdbc:h2:mem:patient
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.username=kishor
#spring.datasource.password=kishor@@##
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.ddl-auto=update
#spring.sql.init.mode=ALWAYS

# for postgres database connections, use in database outside of docker( ctlr + / )
spring.datasource.url=jdbc:postgresql://localhost:5432/patient-service
spring.datasource.username=postgres
spring.datasource.password=kishor@2233#
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true

spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVER:localhost:9094}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.ByteArraySerializer

logging.level.root=info
management.endpoint.health.show-details=always